#pragma version 8
intcblock 0 1 4
bytecblock 0x61737365745f315f72657365727665 0x61737365745f325f72657365727665 0x746f74616c5f737570706c79 0x61737365745f315f6964 0x6c705f61737365745f6964 0x61737365745f325f6964 0x6861735f636f6e66696775726564 0x6b5f636f6e7374616e74 0x151f7c75
txn NumAppArgs
intc_0 // 0
==
bnz main_l12
txna ApplicationArgs 0
pushbytes 0x768fdc56 // "configure(string,asset,asset)uint64"
==
bnz main_l11
txna ApplicationArgs 0
pushbytes 0x9bd1046c // "get_lp_token_asset()uint64"
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0xf8c86197 // "deposit(account)void"
==
bnz main_l9
txna ApplicationArgs 0
pushbytes 0x3c457a88 // "burn(account)void"
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0xe161a2ec // "swap(account)void"
==
bnz main_l7
err
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub swapcaster_13
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub burncaster_12
intc_1 // 1
return
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub depositcaster_11
intc_1 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getlptokenassetcaster_10
intc_1 // 1
return
main_l11:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub configurecaster_9
intc_1 // 1
return
main_l12:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l14
err
main_l14:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// configure
configure_0:
proto 3 1
intc_0 // 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
bytec 6 // "has_configured"
app_global_get
intc_0 // 0
==
// Pool has already been configured
assert
pushbytes 0x6e616d65 // "name"
frame_dig -3
extract 2 0
app_global_put
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
frame_dig -2
txnas Assets
itxn_field XferAsset
intc_0 // 0
itxn_field AssetAmount
global CurrentApplicationAddress
itxn_field Sender
global CurrentApplicationAddress
itxn_field AssetReceiver
itxn_submit
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
frame_dig -1
txnas Assets
itxn_field XferAsset
intc_0 // 0
itxn_field AssetAmount
global CurrentApplicationAddress
itxn_field Sender
global CurrentApplicationAddress
itxn_field AssetReceiver
itxn_submit
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
pushint 18446744073709551615 // 18446744073709551615
itxn_field ConfigAssetTotal
intc_0 // 0
itxn_field ConfigAssetDecimals
intc_0 // 0
itxn_field ConfigAssetDefaultFrozen
pushbytes 0x4c6f726146694c50 // "LoraFiLP"
itxn_field ConfigAssetUnitName
frame_dig -3
extract 2 0
itxn_field ConfigAssetName
global CurrentApplicationAddress
itxn_field ConfigAssetManager
global CurrentApplicationAddress
itxn_field ConfigAssetReserve
global CurrentApplicationAddress
itxn_field ConfigAssetFreeze
global CurrentApplicationAddress
itxn_field ConfigAssetClawback
itxn_submit
bytec 4 // "lp_asset_id"
itxn CreatedAssetID
app_global_put
bytec_3 // "asset_1_id"
frame_dig -2
txnas Assets
app_global_put
bytec 5 // "asset_2_id"
frame_dig -1
txnas Assets
app_global_put
bytec 6 // "has_configured"
intc_1 // 1
app_global_put
bytec 4 // "lp_asset_id"
app_global_get
frame_bury 0
retsub

// get_lp_token_asset
getlptokenasset_1:
proto 0 1
intc_0 // 0
bytec 4 // "lp_asset_id"
app_global_get
frame_bury 0
retsub

// sync_k_constant
synckconstant_2:
proto 0 0
bytec 7 // "k_constant"
bytec_0 // "asset_1_reserve"
app_global_get
bytec_1 // "asset_2_reserve"
app_global_get
*
app_global_put
retsub

// _mint
mint_3:
proto 2 0
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
bytec 4 // "lp_asset_id"
app_global_get
itxn_field XferAsset
global CurrentApplicationAddress
itxn_field Sender
frame_dig -2
itxn_field AssetReceiver
frame_dig -1
itxn_field AssetAmount
itxn_submit
bytec_2 // "total_supply"
bytec_2 // "total_supply"
app_global_get
frame_dig -1
+
app_global_put
retsub

// _transfer
transfer_4:
proto 3 0
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
frame_dig -3
itxn_field XferAsset
global CurrentApplicationAddress
itxn_field Sender
frame_dig -2
itxn_field AssetReceiver
frame_dig -1
itxn_field AssetAmount
itxn_submit
retsub

// min
min_5:
proto 2 1
frame_dig -2
frame_dig -1
<
bnz min_5_l2
frame_dig -1
retsub
min_5_l2:
frame_dig -2
retsub

// deposit
deposit_6:
proto 1 0
bytec_2 // "total_supply"
app_global_get
intc_0 // 0
==
bnz deposit_6_l2
gtxn 0 AssetAmount
bytec_2 // "total_supply"
app_global_get
*
bytec_0 // "asset_1_reserve"
app_global_get
/
gtxn 1 AssetAmount
bytec_2 // "total_supply"
app_global_get
*
bytec_1 // "asset_2_reserve"
app_global_get
/
callsub min_5
store 0
b deposit_6_l3
deposit_6_l2:
gtxn 0 AssetAmount
gtxn 1 AssetAmount
*
pushint 10 // 10
-
sqrt
store 0
deposit_6_l3:
bytec_0 // "asset_1_reserve"
bytec_0 // "asset_1_reserve"
app_global_get
gtxn 0 AssetAmount
+
app_global_put
bytec_1 // "asset_2_reserve"
bytec_1 // "asset_2_reserve"
app_global_get
gtxn 1 AssetAmount
+
app_global_put
frame_dig -1
txnas Accounts
load 0
callsub mint_3
callsub synckconstant_2
intc_1 // 1
return

// burn
burn_7:
proto 1 0
gtxn 0 XferAsset
bytec 4 // "lp_asset_id"
app_global_get
==
// Not Pool LP Token
assert
gtxn 0 AssetAmount
bytec_0 // "asset_1_reserve"
app_global_get
*
bytec_2 // "total_supply"
app_global_get
/
store 1
gtxn 0 AssetAmount
bytec_1 // "asset_2_reserve"
app_global_get
*
bytec_2 // "total_supply"
app_global_get
/
store 2
load 1
intc_0 // 0
>
load 2
intc_0 // 0
>
&&
// insufficient liquidity burned
assert
bytec_0 // "asset_1_reserve"
bytec_0 // "asset_1_reserve"
app_global_get
load 1
-
app_global_put
bytec_1 // "asset_2_reserve"
bytec_1 // "asset_2_reserve"
app_global_get
load 2
-
app_global_put
bytec_3 // "asset_1_id"
app_global_get
frame_dig -1
txnas Accounts
load 1
callsub transfer_4
bytec 5 // "asset_2_id"
app_global_get
frame_dig -1
txnas Accounts
load 2
callsub transfer_4
bytec_2 // "total_supply"
bytec_2 // "total_supply"
app_global_get
gtxn 0 AssetAmount
-
app_global_put
callsub synckconstant_2
intc_1 // 1
return

// swap
swap_8:
proto 1 0
gtxn 0 XferAsset
bytec_3 // "asset_1_id"
app_global_get
==
gtxn 0 XferAsset
bytec 5 // "asset_2_id"
app_global_get
==
||
// asset not recognized
assert
gtxn 0 XferAsset
bytec_3 // "asset_1_id"
app_global_get
==
bnz swap_8_l5
bytec 5 // "asset_2_id"
app_global_get
store 3
bytec_1 // "asset_2_reserve"
app_global_get
store 4
bytec_3 // "asset_1_id"
app_global_get
store 6
bytec_0 // "asset_1_reserve"
app_global_get
store 5
swap_8_l2:
load 5
bytec 7 // "k_constant"
app_global_get
load 4
gtxn 0 AssetAmount
+
/
-
store 7
load 7
load 5
<
// insufficient liquidity
assert
gtxn 0 XferAsset
bytec_3 // "asset_1_id"
app_global_get
==
bnz swap_8_l4
bytec_1 // "asset_2_reserve"
bytec_1 // "asset_2_reserve"
app_global_get
gtxn 0 AssetAmount
+
app_global_put
bytec_0 // "asset_1_reserve"
bytec_0 // "asset_1_reserve"
app_global_get
load 7
-
app_global_put
b swap_8_l6
swap_8_l4:
bytec_0 // "asset_1_reserve"
bytec_0 // "asset_1_reserve"
app_global_get
gtxn 0 AssetAmount
+
app_global_put
bytec_1 // "asset_2_reserve"
bytec_1 // "asset_2_reserve"
app_global_get
load 7
-
app_global_put
b swap_8_l6
swap_8_l5:
bytec_3 // "asset_1_id"
app_global_get
store 3
bytec_0 // "asset_1_reserve"
app_global_get
store 4
bytec 5 // "asset_2_id"
app_global_get
store 6
bytec_1 // "asset_2_reserve"
app_global_get
store 5
b swap_8_l2
swap_8_l6:
load 6
frame_dig -1
txnas Accounts
load 7
callsub transfer_4
retsub

// configure_caster
configurecaster_9:
proto 0 0
intc_0 // 0
pushbytes 0x // ""
intc_0 // 0
dup
txna ApplicationArgs 1
frame_bury 1
txna ApplicationArgs 2
intc_0 // 0
getbyte
frame_bury 2
txna ApplicationArgs 3
intc_0 // 0
getbyte
frame_bury 3
frame_dig 1
frame_dig 2
frame_dig 3
callsub configure_0
frame_bury 0
bytec 8 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub

// get_lp_token_asset_caster
getlptokenassetcaster_10:
proto 0 0
intc_0 // 0
callsub getlptokenasset_1
frame_bury 0
bytec 8 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub

// deposit_caster
depositcaster_11:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
frame_dig 0
callsub deposit_6
retsub

// burn_caster
burncaster_12:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
frame_dig 0
callsub burn_7
retsub

// swap_caster
swapcaster_13:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
frame_dig 0
callsub swap_8
retsub
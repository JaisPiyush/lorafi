{
    "hints": {
        "configure(string)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_lp_token_asset()uint64": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "deposit(axfer,axfer,account)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "burn(axfer,account)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "swap(axfer,account)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 8
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "asset_1_id": {
                    "type": "uint64",
                    "key": "asset_1_id",
                    "descr": ""
                },
                "asset_1_reserve": {
                    "type": "uint64",
                    "key": "asset_1_reserve",
                    "descr": ""
                },
                "asset_2_id": {
                    "type": "uint64",
                    "key": "asset_2_id",
                    "descr": ""
                },
                "asset_2_reserve": {
                    "type": "uint64",
                    "key": "asset_2_reserve",
                    "descr": ""
                },
                "has_configured": {
                    "type": "uint64",
                    "key": "has_configured",
                    "descr": ""
                },
                "k_constant": {
                    "type": "uint64",
                    "key": "k_constant",
                    "descr": ""
                },
                "lp_asset_id": {
                    "type": "uint64",
                    "key": "lp_asset_id",
                    "descr": ""
                },
                "name": {
                    "type": "bytes",
                    "key": "name",
                    "descr": "Name of the pool"
                },
                "total_supply": {
                    "type": "uint64",
                    "key": "total_supply",
                    "descr": ""
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "pool",
        "methods": [
            {
                "name": "configure",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "get_lp_token_asset",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "deposit",
                "args": [
                    {
                        "type": "axfer",
                        "name": "asset_1"
                    },
                    {
                        "type": "axfer",
                        "name": "asset_2"
                    },
                    {
                        "type": "account",
                        "name": "to"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "burn",
                "args": [
                    {
                        "type": "axfer",
                        "name": "asset"
                    },
                    {
                        "type": "account",
                        "name": "to"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "swap",
                "args": [
                    {
                        "type": "axfer",
                        "name": "asset"
                    },
                    {
                        "type": "account",
                        "name": "to"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}